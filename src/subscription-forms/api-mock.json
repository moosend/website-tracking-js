[{
    "Entity": {
        "id": "00000000-0000-0000-0000-000000000000",
        "userId": "00000000-0000-0000-0000-000000000000",
        "websiteId": null,
        "name": null,
        "description": null,
        "type": 2,
        "status": 0,
        "subtype": 3,
        "createdBy": null,
        "updatedBy": null,
        "createdOn": "0001-01-01T00:00:00",
        "updatedOn": "0001-01-01T00:00:00",
        "totalPageViews": 0,
        "totalConversions": 0,
        "totalUniqueVisits": 0,
        "conversionPercentage": 0.0
    },
    "Settings": [
        {
            "Property": 140,
            "Value": "5"
        },
        {
            "Property": 150,
            "Value": true
        }
    ],
    "Blueprint": {
        "blueprintId": "00000000-0000-0000-0000-000000000000",
        "blueprintType": "html",
        "blueprintContent": "<div class=\"main-form-wrapper\" style=\"width: 100%; max-width: 500px; background-color: transparent; background-repeat: no-repeat; background-size: auto; background-image: url(&quot;&quot;);\"> <script src=\"https://polyfill.io/v3/polyfill.min.js?features=Array.prototype.includes%2Cfetch%2CObject.assign%2CString.prototype.includes\"></script> <script>// This code will be added to a <Script> tag, \n// at the <head> of the document \n</script><style type=\"text/css\">body,html{height:100%}*{box-sizing:border-box}select{-webkit-appearance:none;-moz-appearance:none;appearance:none}.form-select-option:hover{background:#007fff;color:#fff;cursor:pointer}.form-select-option{padding:3px}.form-input-wrapper input[type=checkbox]{-webkit-appearance:none;-moz-appearance:none;appearance:none}.lp-flex-container{display:-webkit-box;display:-ms-flexbox;display:flex}.lp-flex-1{-webkit-box-flex:1;-ms-flex:1;flex:1}.lp-ie-flex-shrink{-ms-flex-negative:0}.lp-flex-direction-column{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.lp-flex-direction-row{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.lp-flex-justify-center{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.lp-flex-justify-flex-start{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.lp-flex-justify-flex-end{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.lp-flex-justify-space-evenly{-webkit-box-pack:space-evenly;-ms-flex-pack:space-evenly;justify-content:space-evenly}.lp-flex-align-center{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.lp-flex-align-flex-start{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.lp-flex-align-flex-end{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.checkbox-wrapper{width:intrinsic;width:-moz-fit-content;width:-webkit-fit-content;width:fit-content;position:relative}strong{font-weight:700}\n    \n            .form-input-3f4b572ea09c4843849fdbf129d10397 input::placeholder {\n                color: rgba(0, 0, 0, 0.5);\n                font-size: 14px;\n                font-style: normal;\n                font-weight: normal;\n                text-decoration: none;\n                font-family: Arial, Helvetica, sans-serif !important;\n            }\n        \n\n    @media only screen and (max-width: 640px) {\n\n        .responsive-row .inner-row-div .border-wrapper{\n            -webkit-box-orient: vertical;\n            -webkit-box-direction: normal;\n                -ms-flex-direction: column;\n                    flex-direction: column;\n        }\n\n        .responsive-row .inner-row-div .border-wrapper .responsive-slot {\n            max-width: initial !important;\n        }\n\n        \n\n        body {\n            background-image: url(\"\") !important;\n            background-color: transparent !important;\n            background-repeat: no-repeat !important;\n            background-size: ;\n            -webkit-box-align: start !important;\n            -ms-flex-align: start !important;\n            align-items: flex-start !important;\n        }\n        \n            .row1d4369099e93462ebf9adce736c5d8c7 {\n                -webkit-box-ordinal-group: 1;\n                -ms-flex-order: 0;\n                order: 0;\n                display: block;\n                background-color: transparent !important;\n                background-image: url(\"\") !important;\n                background-position: initial !important;\n                background-repeat: no-repeat !important;\n                background-size: auto !important\n            }\n            \n\n            .row1d4369099e93462ebf9adce736c5d8c7 .inner-row-div {\n                width: auto !important;\n                max-width: 500px !important;\n                border: none !important\n            }\n            \n            \n            .row1d4369099e93462ebf9adce736c5d8c7 .inner-row-div .border-wrapper {\n                background-color: transparent !important;\n                background-image: url(\"\") !important;\n                background-repeat: no-repeat !important;\n                background-position: initial !important;\n                background-size: auto !important;\n                border-style: solid !important;\n                border-width: 0 !important;\n                border-color: #000000 !important;\n                border-radius: 0px !important;\n                padding: 0px !important;\n            }\n            \n            \n            .row1d4369099e93462ebf9adce736c5d8c7 .inner-row-div .border-wrapper {\n                background-color: transparent !important;\n                background-image: url(\"\") !important;\n                background-repeat: no-repeat !important;\n                background-position: initial !important;\n                background-size: auto !important;\n                border-style: solid !important;\n                border-width: 0 !important;\n                border-color: #000000 !important;\n                border-radius: 0px !important;\n                padding: 0px !important;\n            }\n            \n            \n\n        .row1d4369099e93462ebf9adce736c5d8c7 .inner-row-div .slotd09224922e944a6b947c31b845cb05cd {\n            display: -webkit-box !important;\n            display: -ms-flexbox !important;\n            display: flex !important;\n            -webkit-box-orient: vertical !important;\n            -webkit-box-direction: normal !important;\n            -ms-flex-direction: column !important;\n            flex-direction: column !important;\n            -webkit-box-ordinal-group: 1;\n            -ms-flex-order: 0;\n            order: 0;\n            \n            padding: 0px !important;\n            background-color: transparent !important;\n            min-height: undefinedpx !important;\n            max-width: 100% !important;\n            -webkit-box-pack: start !important;\n            -ms-flex-pack: start !important;\n            justify-content: flex-start !important;\n        }\n\n        .row1d4369099e93462ebf9adce736c5d8c7 .inner-row-div .slotd09224922e944a6b947c31b845cb05cd .slot-container {\n            background-color: transparent !important;\n            \n            border-radius: 0px !important;\n        }\n        \n        \n\n            \n\n    }\n\n    @media only screen and (max-width: 450px)  {\n        .responsive-row .inner-row-div .border-wrapper{\n            -webkit-box-orient: vertical;\n            -webkit-box-direction: normal;\n            -ms-flex-direction: column;\n            flex-direction: column;\n        }\n\n        .responsive-row .inner-row-div .border-wrapper .responsive-slot {\n            max-width: initial !important;\n        }\n\n        \n\n        body {\n            background-image: url(\"\") !important;\n            background-color: transparent !important;\n            background-repeat: no-repeat !important;\n            background-size: ;\n            -webkit-box-align: start !important;\n            -ms-flex-align: start !important;\n            align-items: flex-start !important;\n        }\n        \n            .row1d4369099e93462ebf9adce736c5d8c7 {\n                -webkit-box-ordinal-group: 1;\n                -ms-flex-order: 0;\n                order: 0;\n                display: block;\n                background-color: transparent !important;\n                background-image: url(\"\") !important;\n                background-position: initial !important;\n                background-repeat: no-repeat !important;\n                background-size: auto !important\n            }\n            \n\n            .row1d4369099e93462ebf9adce736c5d8c7 .inner-row-div {\n                width: auto !important;\n                max-width: 500px !important;\n                border: none !important\n            }\n            \n            \n            .row1d4369099e93462ebf9adce736c5d8c7 .inner-row-div .border-wrapper {\n                background-color: transparent !important;\n                background-image: url(\"\") !important;\n                background-repeat: no-repeat !important;\n                background-position: initial !important;\n                background-size: auto !important;\n                border-style: solid !important;\n                border-width: 0 !important;\n                border-color: #000000 !important;\n                border-radius: 0px !important;\n                padding: 0px !important;\n            }\n            \n            \n            .row1d4369099e93462ebf9adce736c5d8c7 .inner-row-div .border-wrapper {\n                background-color: transparent !important;\n                background-image: url(\"\") !important;\n                background-repeat: no-repeat !important;\n                background-position: initial !important;\n                background-size: auto !important;\n                border-style: solid !important;\n                border-width: 0 !important;\n                border-color: #000000 !important;\n                border-radius: 0px !important;\n                padding: 0px !important;\n            }\n            \n            \n\n        .row1d4369099e93462ebf9adce736c5d8c7 .inner-row-div .slotd09224922e944a6b947c31b845cb05cd {\n            display: -webkit-box !important;\n            display: -ms-flexbox !important;\n            display: flex !important;\n            -webkit-box-orient: vertical !important;\n            -webkit-box-direction: normal !important;\n            -ms-flex-direction: column !important;\n            flex-direction: column !important;\n            -webkit-box-ordinal-group: 1;\n            -ms-flex-order: 0;\n            order: 0;\n            \n            padding: 0px !important;\n            background-color: transparent !important;\n            min-height: undefinedpx !important;\n            max-width: 100% !important;\n            -webkit-box-pack: start !important;\n            -ms-flex-pack: start !important;\n            justify-content: flex-start !important;\n        }\n\n        .row1d4369099e93462ebf9adce736c5d8c7 .inner-row-div .slotd09224922e944a6b947c31b845cb05cd .slot-container {\n            background-color: transparent !important;\n            \n            border-radius: 0px !important;\n        }\n        \n        \n\n            \n        \n    }\n    </style> <style type=\"text/css\">@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.checkbox-check-marker{display:none!important}}</style> <!--[if IE ]>\n        <style>\n            .checkbox-check-marker {\n                display: none !important;\n            }\n        </style>\n    <![endif]--> <div class=\"content lp-flex-container lp-flex-direction-column\" style=\"flex:1\"><div data-structure-type=\"row\" id=\"1d4369099e93462ebf9adce736c5d8c7\" data-row-type=\"FULL\" data-row-id=\"1d436909-9e93-462e-bf9a-dce736c5d8c7\" data-row-behavior=\"NORMAL\" data-row-repeat-count=\"5\" data-row-sort-products=\"Orders\" data-row-background-color-wide=\"transparent\" data-row-background-image-wide=\"transparent\" data-row-background-repeat-wide=\"transparent\" class=\"landing-page-row row1d4369099e93462ebf9adce736c5d8c7 responsive-row lp-ie-flex-shrink\" style=\"background-color: transparent; background-image: url(&quot;&quot;); background-position: initial; background-repeat: no-repeat; background-size: auto;\"><div class=\"inner-row-div\" style=\"vertical-align: top; max-width: 500px; width: 100%; margin: 0px auto;\"><div class=\"border-wrapper lp-flex-container\" style=\"width: 100%; background-color: transparent; background-image: url(&quot;&quot;); background-repeat: no-repeat; background-position: initial; display: flex; border-radius: 0px; padding: 0px;\"><div class=\"landing-page-slot lp-flex-container lp-flex-direction-column lp-flex-justify-flex-start lp-flex-1 slotd09224922e944a6b947c31b845cb05cd FULL responsive-slot\" id=\"d09224922e944a6b947c31b845cb05cd\" data-structure-type=\"slot\" data-slot-type=\"FULL\" style=\"display: flex; flex-grow: 1; flex-direction: column; max-width: 500px; background-color: transparent; justify-content: flex-start; -webkit-box-pack: start; padding: 0px;\"><div class=\"slot-container lp-flex-container lp-flex-direction-column lp-flex-justify-center lp-ie-flex-shrink\" style=\"background-color: transparent; overflow: visible; display: flex; flex-direction: column; border-radius: 0px; justify-content: center; -webkit-box-pack: center;\"><div class=\"component form-component form3f4b572ea09c4843849fdbf129d10397\" data-component-type=\"form\" cellspacing=\"0\" cellpadding=\"0\" width=\"500\" style=\"padding: 50px; margin: 0px auto; background-color: rgb(245, 166, 35); border-width: 5px; border-color: rgb(0, 0, 0); border-style: solid; border-radius: 12px; clear: both; position: relative; width: 100%;\"><form class=\"\" data-mailing-list-id=\"bf8ef0bb-4af8-4c0a-8e32-f83bd930f45e\" id=\"3f4b572ea09c4843849fdbf129d10397\" data-placeholder-color=\"rgba(0, 0, 0, 0.5)\" data-placeholder-font=\"Arial, Helvetica, sans-serif\" data-placeholder-size=\"14\" data-placeholder-style=\"normal\" data-placeholder-weight=\"normal\" data-placeholder-decoration=\"none\" data-recaptcha=\"\" data-submit-option=\"\" data-pass-params=\"false\" style=\"width: 100%; margin: 0px auto;\" to=\"https://members-utilitiesservice.services.moostaging.com/subscribe/bf8ef0bb-4af8-4c0a-8e32-f83bd930f45e\" data-category=\"Landing Page\"><div id=\"primary-Email-3f4b572ea09c4843849fdbf129d10397\" class=\"form-input-wrapper lp-flex-1\" style=\"width: 100%; position: relative; margin: 10px auto;\"><label class=\"form-input-element lp-flex-container form-input-3f4b572ea09c4843849fdbf129d10397 lp-flex-direction-column\" style=\"display: flex; flex-direction: column; width: 100%;\"><span class=\"form-field-label\" style=\"user-select: none; white-space: pre-wrap; word-break: break-word; color: rgb(64, 64, 64); font-size: 16px; font-weight: normal; font-style: normal; text-decoration: none; min-height: 20px; font-family: Arial, Helvetica, sans-serif;\">Email<span style=\"color: red; text-decoration: none; font-weight: normal; font-style: normal;\"> *</span></span><div class=\"lp-flex-1\" style=\"display: block; flex: 1 1 0%;\"><input class=\"lp-flex-1\" data-primary=\"true\" data-type=\"email\" data-label=\"Email\" data-required=\"true\" type=\"email\" placeholder=\"Email\" name=\"Email\" style=\"width: 100%; min-width: 0px; outline: none; flex: 1 1 0%; background: rgb(255, 255, 255); padding: 7px; color: rgb(0, 0, 0); font-size: 14px; border-width: 2px; border-color: rgb(201, 201, 201); border-style: solid; border-radius: 3px; font-weight: normal; font-style: normal; text-decoration: none; font-family: Arial, Helvetica, sans-serif;\"></div></label></div><div id=\"form-button-container-3f4b572ea09c4843849fdbf129d10397\" class=\"form-button-element lp-flex-container lp-justify-center\" style=\"display: flex; position: relative; justify-content: center; -webkit-box-pack: center;\"><button id=\"form-button-3f4b572ea09c4843849fdbf129d10397\" type=\"submit\" class=\"landingpage-button\" style=\"background-color: rgb(239, 239, 239); border-color: rgb(0, 0, 0); border-radius: 0px; border-width: 0px; color: rgb(120, 120, 120); font-family: Arial, Helvetica, sans-serif; font-size: 16px; font-style: normal; font-weight: normal; margin: 0px; text-decoration: none; width: auto; padding: 12px; transition: all 0.3s ease 0s; opacity: 1; cursor: pointer; position: relative;\"><span>Button</span><i class=\"fa fa-circle-o-notch fa-spin fa-2x\" style=\"z-index: -1; position: absolute; opacity: 0; top: 50%; left: 50%; margin-left: -13px; margin-top: -13px; color: rgb(120, 120, 120); font-size: 26px; transition: all 0.3s ease 0s;\"></i></button></div></form><div class=\"landing-page-form-message\" style=\"display: none;\"><p style=\"text-align: left; margin: 0px;\">Success! You've been added to the list.</p></div></div></div></div></div></div></div></div> <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\"><script>\n\n    // This code will be added to a <Script> tag, \n// at the end of the <body> element \n\n\n    var postData = function (url, data, form) {\n\n        const enabledRecaptcha = form.getAttribute('data-recaptcha');\n\n        if (enabledRecaptcha === 'enabled' && !grecaptcha.getResponse()){\n            var recaptcha = document.getElementById('recaptcha' + form.id);\n\n            var message = document.createElement('div');\n            message.innerText = 'Please validate using the recaptcha';\n\n            message.className = 'form-input-error-message' + recaptcha.className.replace('g-recaptcha', '');\n            message.style.fontSize = '12px';\n            message.style.color = '#d8000c';\n            message.style.fontStyle = 'italic';\n            message.style.margin = '5px 0px 20px';\n\n            recaptcha.parentNode.insertBefore(message, recaptcha.nextSibling);\n\n            return;\n        }\n\n        var redirect = form.getAttribute('data-submit-option');\n        var passParams = form.getAttribute('data-pass-params');\n\n        var button = document.getElementById('form-button-' + form.id);\n\n        button.disabled = true;\n        button.style.cursor = 'not-allowed';\n\n        button.children[0].style.opacity = 0;\n        button.children[0].style.zIndex = -1;\n        button.children[1].style.opacity = 1;\n        button.children[1].style.zIndex = 1;\n\n        return fetch(url, {\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n            // mode: \"cors\", // no-cors, cors, *same-origin\n            // cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: \"same-origin\", // include, *same-origin, omit\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n                // \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n            // redirect: \"follow\", // manual, *follow, error\n            // referrer: \"no-referrer\", // no-referrer, *client\n            // body: data, // body data type must match \"Content-Type\" header\n            body: JSON.stringify(data)\n        })\n        .then(function(response){\n\n            button.disabled = false;\n            button.style.cursor = 'pointer';\n\n            button.children[0].style.opacity = 1;\n            button.children[0].style.zIndex = 1;\n            button.children[1].style.opacity = 0;\n            button.children[1].style.zIndex = -1;\n\n            if (response.ok){\n\n                var submitted = window.localStorage.getItem('lp_form_submitted-' + '__ENTITY_ID__');\n                if (submitted !== 'true'){\n\n                    var email = data.ContactEmail;\n                    var name = data.ContactName;\n                    var fields = {};\n    \n                    if (data.Fields && data.Fields.length) {\n                        for (var i = 0; i < data.Fields.length; i++){\n                            fields = Object.assign(fields, {[data.Fields[i].Name]: data.Fields[i].Value});\n                        }\n                    }\n    \n                    // Track_LP_Form_Submitted\n                    window.localStorage.setItem('lp_form_submitted-' + '__ENTITY_ID__', 'true');\n                }\n\n                if (redirect){\n\n                    var redirectUrl = redirect.includes('http') ? redirect : 'http://' + redirect;\n\n                    if (passParams === 'true' && window.location.search){\n                        var paramString = window.location.search;\n                        if (redirectUrl.includes('?')){\n                            redirectUrl = redirectUrl + paramString.replace('?', '&');\n                        } else {\n                            redirectUrl = redirectUrl + paramString;\n                        }\n\n                        var dataParams = '';\n                        for (var key in data) {\n                            if (data[key] && key !== 'Fields'){\n                                dataParams += '&' + key.replace(/ /g, '') + '=' + encodeURIComponent(data[key]);\n                            } else if (data[key] && key === 'Fields') {\n                                var fields = data[key];\n                                for (var i = 0; i < fields.length; i++){\n                                    dataParams += '&' + fields[i].Name.replace(/ /g, '') + '=' + encodeURIComponent(fields[i].Value);\n                                }\n                            }\n                        }\n\n                        if (dataParams){\n                            if (!redirectUrl.includes('?')){\n                                redirectUrl = redirectUrl + dataParams.replace('&', '?');\n                            } else {\n                                redirectUrl = redirectUrl + dataParams;\n                            }\n                        }\n\n                    }\n\n                    window.top.location.href = redirectUrl;\n                } else {\n                    form.nextSibling.style.display = 'block';\n                    form.style.display = 'none';\n                }\n            } else {\n                response.json()\n                .then(function(json){\n\n                    var errors = json.ValidationErrors;\n\n                    var handledErrors = [];\n\n                    for (var i = 0; i < errors.length; i++){\n                        var error = errors[i];\n\n                        if (!handledErrors.includes(error.Field)){\n\n                            var regex = /[(.*?)]/;\n    \n                            var matches = error.Field.match(regex);\n    \n                            var fieldDiv;\n                            var errorMessage;\n    \n                            if (matches) {\n                                var field = error.Field.split('.')[0].split('[')[1].replace(']', '');\n                                var customField = data.Fields[field];\n                                var name = customField.Name.replace(/ /g, '');\n    \n                                var fieldDiv = document.getElementById(name + '-' + form.id);\n\n                                errorMessage = error.Message.replace(\"'Value'\", fieldDiv.firstChild.firstChild.innerText);\n    \n                            } else {\n                                var field = error.Field;\n                                var fieldName = field === 'ContactEmail' ? 'Email' : 'Name';\n                                \n                                fieldDiv = document.getElementById('primary-' + fieldName + '-' + form.id);\n\n                                errorMessage = error.Message.replace(field === 'ContactEmail' ? \"'Contact Email'\" : \"Contact Name\", fieldName);\n                                \n                            }\n\n                            if (fieldDiv.children.length < 2){\n\n                                var isRowForm = form.className.includes('lp-flex-direction-row') ? true : false;\n\n                                var labelContainer = fieldDiv.firstChild;\n                                var margin = labelContainer.style.flexDirection === 'column' ? '0' : labelContainer.firstChild.style.flexBasis;\n        \n                                var message = document.createElement('div');\n                                message.innerText = errorMessage;\n        \n                                message.className = 'form-input-error-message';\n                                message.style.fontSize = '12px';\n                                message.style.color = '#d8000c';\n                                message.style.fontStyle = 'italic';\n                                message.style.margin = '5px 0 0 ' + margin;\n                                if (isRowForm){\n                                    message.style.position = 'absolute';\n                                    message.style.bottom = '-19px';\n                                    message.style.left = 0;\n                                }\n        \n                                fieldDiv.appendChild(message);\n        \n                                handledErrors.push(error.Field);\n                            }\n    \n                        }\n                    }\n                });\n            }\n        })\n        .catch(function(e){\n\n            button.children[0].style.opacity = 1;\n            button.children[0].style.cursor = 'pointer';\n            button.children[0].disabled = false;\n            button.children[1].style.opacity = 0;\n\n            console.error(e);\n        });\n    }\n\n    var getFormData = function(form){\n        var valuesObj = {}\n        var valuesArray = [];\n\n        var inputs = form.getElementsByTagName('input');\n\n        if (inputs && inputs.length > 0){\n            var validInputs = validateFormInputs(inputs, form);\n            if (!validInputs){\n                return false;\n            }\n            var inputValues = getCollectionValues(inputs);\n            valuesArray = valuesArray.concat(inputValues);\n        }\n\n        valuesObj = correctObjectStructure(valuesArray);\n\n        var mailingListId = form.getAttribute('data-mailing-list-id');\n        var source = '__ENTITY_NAME__';\n        var entityId = '__ENTITY_ID__';\n        var category = form.getAttribute('data-category');\n        valuesObj = Object.assign(valuesObj, {'MailingListId': mailingListId, Category: category, Source: source, EntityId: entityId});\n        return valuesObj;\n    }\n\n    var correctObjectStructure = function(collection){\n        // CustomFields\n        var valuesObj = {};\n        var customFields = [];\n        for (var i = 0; i < collection.length; i++){\n            var field = collection[i];\n            if (field.Primary && field.Name === 'Name'){\n                valuesObj = Object.assign(valuesObj, {'ContactName': field.Value});\n            } else if (field.Primary && field.Name === 'Email'){\n                valuesObj = Object.assign(valuesObj, {'ContactEmail': field.Value});\n            } else {\n                delete field.Primary;\n                customFields.push(field);\n            }\n        }\n        valuesObj = Object.assign(valuesObj, {'Fields': customFields});\n        return valuesObj;\n    }\n\n    var validateFormInputs = function(collection, form){\n\n        clearAllErrorMessages();\n\n        var isRowForm = form.className.includes('lp-flex-direction-row') ? true : false;\n        var isValid = true;\n\n        for (var i = 0; i < collection.length; i++){\n            var required = collection[i].getAttribute('data-required');\n\n            var name = collection[i].getAttribute('data-label');\n            var value = collection[i].type === 'checkbox' ? collection[i].checked : collection[i].value;\n\n            if (required === 'true' && !value){\n                \n                var labelContainer = collection[i].parentNode.parentNode;\n                var margin = labelContainer.style.flexDirection === 'column' ? '0' : labelContainer.firstChild.style.flexBasis;\n\n                var message = document.createElement('div');\n                message.innerText = name + ' is required!';\n\n                message.className = 'form-input-error-message';\n                message.style.fontSize = '12px';\n                message.style.color = '#d8000c';\n                message.style.fontStyle = 'italic';\n                message.style.margin = '5px 0 0 ' + margin;\n                if (isRowForm){\n                    message.style.position = 'absolute';\n                    message.style.bottom = '-19px';\n                    message.style.left = 0;\n                }\n\n                if (labelContainer.parentNode.children.length < 2){\n                    labelContainer.parentNode.appendChild(message);\n                }\n\n                isValid = false;\n\n            }\n        }\n        return isValid;\n    }\n\n    var getCollectionValues = function(collection){\n        var valuesArray = [];\n        for (var i = 0; i < collection.length; i++){\n            var name = collection[i].name;\n            var value = collection[i].type === 'checkbox' ? collection[i].checked : collection[i].value;\n            var required = collection[i].getAttribute('data-required');\n            // var validatable = collection[i].getAttribute('data-validate');\n            var primary = collection[i].getAttribute('data-primary');\n            var type = collection[i].getAttribute('data-type');\n            // valuesArray.push({Name: name, Value: value, Required: required, Validatable: validatable, Primary: primary, Type: type});\n            valuesArray.push({Name: name, Value: value, Required: required, Primary: primary, Type: type});\n        }\n        return valuesArray;\n    }\n\n    var buttonCallback = function(e){\n        e.preventDefault();\n        var formData = getFormData(this);\n        if (formData){\n            var submitTo = this.getAttribute('to');\n            postData(submitTo, formData, this);\n        }\n    }\n\n    var addEventToButton = function(forms){\n        for (var i = 0; i < forms.length; i++){\n            var formButton = forms[i].getElementsByTagName('button');\n            if (formButton && formButton.length){\n                formButton[0].onclick = buttonCallback.bind(forms[i]);\n            }\n        }            \n    }\n\n    var readyFormSubmit = function(){\n        var forms = document.getElementsByTagName('form');\n        addEventToButton(forms);\n    }\n\n    var dateTimeFocus = function(){\n        var dateElements = document.getElementsByClassName(\"form-input-date-element\");\n        if (dateElements && dateElements.length){\n            for (var i = 0; i < dateElements.length; i++){\n                dateElements[i].onfocus = function() {\n                    if (this.value === ''){\n                        this.type = \"date\";\n                        this.focus();\n                    }\n                }\n    \n                dateElements[i].onblur = function() {\n                    if (this.value === ''){\n                        this.type = \"text\";\n                        this.blur();\n                    }\n                }\n            }\n        }\n    }\n\n    var checkboxOnClickEvents = function(){\n        var checkboxes = document.getElementsByClassName(\"form-input-checkbox-element\");\n        for (var i = 0; i < checkboxes.length; i++){\n            checkboxes[i].onclick = function() {\n                if (this.checked){\n                    this.nextSibling.style.display = 'block';\n                } else {\n                    this.nextSibling.style.display = 'none';\n                }\n            }\n        }\n    }\n\n    var hideCheckMarkers = function(){\n        var checkMarkers = document.getElementsByClassName(\"checkbox-check-marker\");\n        for (var i = 0; i < checkMarkers.length; i++){\n            checkMarkers[i].style.display = 'none';\n        }\n    }\n\n    var clearErrorMessagesCallback = function(){\n        var inputWrappers = document.getElementsByClassName(\"form-input-wrapper\");\n        if (inputWrappers && inputWrappers.length){\n            for (var i = 0; i < inputWrappers.length; i++){\n                var inputElement = inputWrappers[i].getElementsByTagName(\"input\");\n                if (inputElement && inputElement.length){\n                    inputElement[0].oninput = function(e) {\n                        var errorElement = this.getElementsByClassName('form-input-error-message');\n                        if (errorElement && errorElement.length){\n                            this.removeChild(errorElement[0]);\n                        }\n                    }.bind(inputWrappers[i]);\n                }\n            }\n        }\n    }\n\n    var clearAllErrorMessages = function(){\n        var errorElements = document.getElementsByClassName(\"form-input-error-message\");\n        for (var i = 0; i < errorElements.length; i++){\n            if (errorElements[i]){\n                errorElements[i].parentNode.removeChild(errorElements[i]);\n            }\n        }\n    }\n\n    var prepareFormSelects = function(){\n        var selectElements = document.getElementsByClassName(\"form-input-select-element\");\n       \n        for (var i = 0; i < selectElements.length; i++){\n            var optionsContainer = selectElements[i] && selectElements[i].getElementsByClassName(\"form-select-option-container\")[0];\n            if (optionsContainer){\n               \n\n                var input = selectElements[i].getElementsByTagName(\"input\")[0];\n                \n                var toggleDisplay = function(container){\n                    if (container.style.display === \"none\"){\n                        container.style.display = \"block\";\n                    } else {\n                        container.style.display = \"none\";\n                    }\n                }\n\n                input.onclick = toggleDisplay.bind(this, optionsContainer);\n                input.onblur = function(container){\n                    setTimeout(function(){\n                        container.style.display = \"none\";\n                    }, 10);\n                }.bind(this, optionsContainer);\n\n                var options = optionsContainer.children;\n\n                function createInputCb(index) {\n                    var inp = selectElements[index].getElementsByTagName(\"input\")[0];\n                    return function(option){\n                        inp.value = option.textContent;\n                    };\n                }\n\n                for (var j = 0; j < options.length; j++){\n                    var cb = createInputCb(i);\n                    options[j].onmousedown = cb.bind(this, options[j])\n                }\n\n            }\n        }\n    }\n\n    var addTrackToButtons = function(){\n        var buttons = document.getElementsByClassName(\"landingpage-button\");\n\n        for (var i = 0; i < buttons.length; i++){\n            if (!buttons[i].onclick){\n                buttons[i].onclick = function(e) {\n                    var clicked = window.localStorage.getItem('lp_button_clicked-' + '__ENTITY_ID__');\n                    if (clicked !== 'true'){\n                        // Track_LP_Button_Clicked\n                        window.localStorage.setItem('lp_button_clicked-' + '__ENTITY_ID__', 'true');\n                    }\n                }\n            }\n        }\n\n    }\n\n    var trackVisit = function(){\n        var visited = window.localStorage.getItem('lp_visited-' + '__ENTITY_ID__');\n        if (visited !== 'true'){\n            // Track_LP_Visit\n            window.localStorage.setItem('lp_visited-' + '__ENTITY_ID__', 'true');\n        }\n    }\n\n    var formatDigit = function(digit){\n        if (digit.length === 1){\n            return '0' + digit;\n        }\n        return digit;\n    }\n\n    var getCountdownDate = function(date){\n\n        const currentDate = new Date();\n        const selectedDate = new Date(date);\n\n        let delta = Math.abs(selectedDate - currentDate) / 1000;\n\n        const days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n\n        const hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n\n        const minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n\n        const seconds = Math.floor(delta % 60);\n\n        return {\n            days: formatDigit(days.toString()),\n            hours: formatDigit(hours.toString()),\n            minutes: formatDigit(minutes.toString()),\n            seconds: formatDigit(seconds.toString())\n        };\n\n    }\n\n    var runCountdownTimers = function(){\n        var timers = document.querySelectorAll('div[data-component-type=\"timer\"]');\n\n        if (timers && timers.length){\n\n            for (var i = 0; i < timers.length; i++){\n                var date = timers[i].getAttribute('data-component-date');\n\n                var textTimer = timers[i].getAttribute('data-component-text-timer');\n\n                var setCounters = function(timer, dateArg){\n                    var counters = getCountdownDate(dateArg);\n                    var daysBox = timer.querySelector('[data-box-type=\"days\"');\n                    var hoursBox = timer.querySelector('[data-box-type=\"hours\"');\n                    var minutesBox = timer.querySelector('[data-box-type=\"minutes\"');\n                    var secondsBox = timer.querySelector('[data-box-type=\"seconds\"');\n\n                    daysBox.textContent = counters.days;\n                    hoursBox.textContent = counters.hours;\n                    minutesBox.textContent = counters.minutes;\n                    secondsBox.textContent = counters.seconds;\n                };\n\n                if (textTimer === 'true'){\n\n                    var setInitialCounters = function(timer, dateArg){\n                        var counters = getCountdownDate(dateArg);\n        \n                        timers[i].innerHTML = timers[i].innerHTML.replace(\n                            '[days]',\n                            '<span data-box-type=\"days\">' + counters.days + '</span>'\n                        );\n                        timers[i].innerHTML = timers[i].innerHTML.replace(\n                            '[hours]',\n                            '<span data-box-type=\"hours\">' + counters.hours + '</span>'\n                        );\n                        timers[i].innerHTML = timers[i].innerHTML.replace(\n                            '[minutes]',\n                            '<span data-box-type=\"minutes\">' + counters.minutes + '</span>'\n                        );\n                        timers[i].innerHTML = timers[i].innerHTML.replace(\n                            '[seconds]',\n                            '<span data-box-type=\"seconds\">' + counters.seconds + '</span>'\n                        );\n                    };\n\n                    setInitialCounters(timers[i], date);\n\n                } else {\n                    setCounters(timers[i], date);\n                }\n\n                setInterval(setCounters.bind(this, timers[i], date), 1000);\n\n            }\n        }\n    }\n\n    runCountdownTimers();\n\n    readyFormSubmit();\n\n    dateTimeFocus();\n\n    checkboxOnClickEvents();\n\n    hideCheckMarkers();\n\n    prepareFormSelects();\n\n    addTrackToButtons();\n    \n    clearErrorMessagesCallback();\n\n    trackVisit();\n    </script></div>"
    }
}]